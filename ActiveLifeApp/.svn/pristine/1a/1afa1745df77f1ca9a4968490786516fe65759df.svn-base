//
//  MyFriendsListViewController.m
//  Active Life App
//
//  Created by sdnmacmini10 on 29/08/14.
//  Copyright (c) 2014 sdnmacmini10. All rights reserved.
//

#import "MyFriendsListViewController.h"

@interface MyFriendsListViewController ()<MNMBottomPullToRefreshManagerClient,UIScrollViewDelegate>
{
    IBOutlet UITableView *friendsTableView;
    IBOutlet UITextField *txtSearch;
    MNMBottomPullToRefreshManager *pullToRefreshManager_;
    NSUInteger reloads_;
    int pageNumber;
}

@property (nonatomic, strong) NSMutableArray *responseArr;
@property (nonatomic, strong) NSMutableArray *searchArr;

-(IBAction)btnMenuPressed:(id)sender;
-(IBAction)btnLogOutPressed:(id)sender;
-(void)fetchFriendsListForSearchText :(NSString *)SearchText andPage :(int)pageNo;
@end

@implementation MyFriendsListViewController

bool search=0;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view.
}

-(void)viewWillAppear:(BOOL)animated{
    
    self.navigationController.navigationBarHidden = YES;
    
    //    _responseArr = [[NSMutableArray alloc] init];
    
    _searchArr = [[NSMutableArray alloc] init];
    _responseArr = [[NSMutableArray alloc] init];
    
    [self fetchFriendsListForSearchText:txtSearch.text andPage:1];
    
    pageNumber = 1;
    reloads_ = -1;
//    pullToRefreshManager_ = [[MNMBottomPullToRefreshManager alloc] initWithPullToRefreshViewHeight:90.0f tableView:friendsTableView withClient:self];
}

#pragma mark - General Button Actions

-(IBAction)btnMenuPressed:(id)sender{
    [txtSearch resignFirstResponder];
    SWRevealViewController *revealController = [self revealViewController];
    [revealController revealToggle:nil];
}

-(IBAction)btnLogOutPressed:(id)sender{
    UINavigationController *navController =(UINavigationController *) [UIApplication sharedApplication].keyWindow.rootViewController;
    [navController popViewControllerAnimated:YES];
}

#pragma mark - Table View Delegate Methods

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    return 64.0;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [_responseArr count];
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *CellIdentifier = @"SearchCell";
    UITableViewCell *cell;

    if (cell==nil) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier];
    }
//  cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
    
//    cell.backgroundColor = [UIColor lightGrayColor];
    
    cell.selectionStyle = UITableViewCellEditingStyleNone;

    UILabel *labelName = [[UILabel alloc] initWithFrame:CGRectMake(70, 12, 165, 20)];
    labelName.font = [UIFont fontWithName:@"Helvetica Light" size:13.0];
    labelName.text = [[_responseArr objectAtIndex:indexPath.row] valueForKey:@"name"];
    [cell.contentView addSubview:labelName];
    
    NSTextAttachment *attachment = [[NSTextAttachment alloc] init];
    attachment.image = [UIImage imageNamed:@"location_icon_small.png"];
    NSAttributedString *attachmentString = [NSAttributedString attributedStringWithAttachment:attachment];
    NSMutableAttributedString *myString= [[NSMutableAttributedString alloc] initWithString:[NSString stringWithFormat:@" %@",[[_responseArr objectAtIndex:indexPath.row] valueForKey:@"country"]]];
    [myString insertAttributedString:attachmentString atIndex:0];
    
    UILabel *locationLabel = [[UILabel alloc] initWithFrame:CGRectMake(70, 32, 165, 20)];
    locationLabel.font = [UIFont fontWithName:@"Helvetica Light" size:11.0];
    locationLabel.attributedText = myString;
    locationLabel.textColor = [UIColor darkGrayColor];
    [cell.contentView addSubview:locationLabel];
    
    UIImageView *friendImageView = [[UIImageView alloc] initWithFrame: CGRectMake(10, 12, 40, 40)];
    friendImageView.layer.borderColor = [UIColor colorWithRed:19.0/255.0 green:182.0/255.0 blue:241.0/255.0 alpha:1.0].CGColor;
    friendImageView.layer.borderWidth = 1.0;
    friendImageView.layer.cornerRadius = 20.0;
    friendImageView.layer.masksToBounds = YES;
    NSURL *url = [NSURL URLWithString:[[_responseArr objectAtIndex:indexPath.row] valueForKey:@"profile_picture"]];
    
    [friendImageView setImageWithURL:url placeholderImage:[UIImage imageNamed:@"No_image_available.png"]];
    [cell.contentView addSubview:friendImageView];

    UIButton *buttonAdd = [[UIButton alloc] initWithFrame:CGRectMake(250,14,35,35)];
    [buttonAdd setImage:[UIImage imageNamed:@"plus"]  forState:UIControlStateNormal];
    [buttonAdd setImage:[UIImage imageNamed:@"checkmark_icon"]  forState:UIControlStateHighlighted];
    [buttonAdd setImage:[UIImage imageNamed:@"checkmark_icon"]  forState:UIControlStateSelected];
    
    if ([[[_responseArr objectAtIndex:indexPath.row] valueForKey:@"friendship_status"] isEqualToString:@"0"]) {
            buttonAdd.enabled = NO;
           buttonAdd.highlighted = YES;
    }
    else   if ([[[_responseArr objectAtIndex:indexPath.row] valueForKey:@"friendship_status"] isEqualToString:@"1"]) {
        buttonAdd.selected = YES;
    }
//    else if([[[_responseArr objectAtIndex:indexPath.row] valueForKey:@"friendship_status"] isEqualToString:@"2"]){
//        buttonAdd.highlighted = YES;
//    }
    [buttonAdd addTarget:self action:@selector(btnAddFriendPressed:) forControlEvents:UIControlEventTouchUpInside];
    buttonAdd.tag = 100+indexPath.row;
    [cell.contentView addSubview:buttonAdd];
    
    return cell;
}

//- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
//    EventDetailsViewController *eventDetailsViewController = [[AppDelegate storyBoard] instantiateViewControllerWithIdentifier:@"EventDetailsViewController"];
//    eventDetailsViewController.eventId = [[search?_searchArr:_responseArr objectAtIndex:indexPath.row] valueForKey:@"event_id"];
//    [self.navigationController pushViewController:eventDetailsViewController animated:YES];
//}


#pragma mark - Pull to refresh

- (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate
{
    [pullToRefreshManager_ tableViewReleased];
}

- (void)bottomPullToRefreshTriggered:(MNMBottomPullToRefreshManager *)manager
{
    pageNumber ++;
    NSLog(@"pageNumberpageNumber....%i",pageNumber);
    [self fetchFriendsListForSearchText:txtSearch.text andPage:pageNumber];
}

-(void)stopReloading
{
    [pullToRefreshManager_ tableViewReloadFinished];
}

- (void)loadTable
{
    reloads_++;
    [friendsTableView reloadData];
    [pullToRefreshManager_ tableViewReloadFinished];
}

- (void)viewDidLayoutSubviews
{
    [super viewDidLayoutSubviews];
    [pullToRefreshManager_ relocatePullToRefreshView];
}

#pragma mark -  Add as a friend button action

-(void)btnAddFriendPressed: (UIButton *)sender{
    NSLog(@"sender tag...%i",[sender tag]);

    sender.selected = YES;
    
    NSMutableDictionary *postDict = [[NSMutableDictionary alloc] init];
    [postDict setObject:[[AppDelegate GloabalInfo] valueForKey:@"user_id"] forKey:@"user_id"];
    [postDict setObject:[[_responseArr objectAtIndex:[sender tag]-100] valueForKey:@"user_id"] forKey:@"friend_id"];
    [postDict setObject:KAPI_KEY forKey:@"api_key"];
    [postDict setObject:[AppDelegate getCurrentTimeStamp] forKey:@"timestamp"];
    [postDict setObject:[AppDelegate hmacSHA256:KSECRET_KEY forKeyValue:[NSString stringWithFormat:@"%@%@%@%@",[[AppDelegate GloabalInfo] valueForKey:@"user_id"],[[_responseArr objectAtIndex:[sender tag]-100] valueForKey:@"user_id"],KAPI_KEY,[AppDelegate getCurrentTimeStamp]]] forKey:@"signature"];
    
    WebserviceCall *webserviceCall = [[WebserviceCall alloc] init];
    webserviceCall.delegate = self;
    webserviceCall.tag = 1010;
    [webserviceCall callWebserviceWithIdentifier:@"AddAsFriend" andArguments:postDict];
}

#pragma mark - Textfield Delegate Methods

- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string{
    NSLog(@"searchText..%@",string);
    NSString *searchStr;
    
    if (string.length == 0) {
        searchStr = [textField.text substringWithRange: NSMakeRange (0, textField.text.length-1)];
    }
    else{
        searchStr = [NSString stringWithFormat:@"%@%@",textField.text,string];
    }
    
    search = searchStr.length ?1:0;
//    NSPredicate *predicate;
//    [self fetchFriendsListForSearchText:searchStr andPage:1];
//    if ([segmentControl selectedSegmentIndex]==0) {
//        predicate = [NSPredicate predicateWithFormat:@"SELF.friends_name beginswith[cd] %@",searchStr];
//    }
//    else{
//        predicate = [NSPredicate predicateWithFormat:@"SELF.event_location beginswith[cd] %@",searchStr];
//    }
    
//    NSArray *tempArray = [_responseArr filteredArrayUsingPredicate:predicate];
//    _searchArr = [NSMutableArray arrayWithArray:tempArray];
//    [friendsTableView reloadData];
    return YES;
}

- (BOOL)textFieldShouldReturn:(UITextField *)textField{
//    textField.text = @"";
    [textField resignFirstResponder];
    search = 0;
    [self viewWillAppear:YES];
//  [friendsTableView reloadData];
    return YES;
}

//- (void)textFieldDidEndEditing:(UITextField *)textField{
//    [self fetchFriendsListForSearchText:txtSearch.text andPage:0];
//}

#pragma mark - Call Webservice for Fetching Users List

-(void)fetchFriendsListForSearchText :(NSString *)SearchText andPage :(int)pageNo{
    
    NSMutableDictionary *postDict = [[NSMutableDictionary alloc] init];
    
    [postDict setObject:[NSString stringWithFormat:@"%i",pageNo] forKey:@"page_num"];
    [postDict setObject:[[AppDelegate GloabalInfo] valueForKey:@"user_id"] forKey:@"user_id"];
    [postDict setObject:SearchText forKey:@"friend_keyword"];
    [postDict setObject:KAPI_KEY forKey:@"api_key"];
    [postDict setObject:[AppDelegate getCurrentTimeStamp] forKey:@"timestamp"];
    [postDict setObject:[AppDelegate hmacSHA256:KSECRET_KEY forKeyValue:[NSString stringWithFormat:@"%@%@%@",[[AppDelegate GloabalInfo] valueForKey:@"user_id"],KAPI_KEY,[AppDelegate getCurrentTimeStamp]]] forKey:@"signature"];
    
    WebserviceCall *webserviceCall = [[WebserviceCall alloc] init];
    webserviceCall.delegate = self;
    webserviceCall.tag = 1011;
    [webserviceCall callWebserviceWithIdentifier:@"SearchUserFriends" andArguments:postDict];
}

#pragma mark - Webservice Call Delegate Methods

-(void)webRequestFinished:(id)sender forTag:(int)Tag{
    
    if (Tag == 1011) {

        if ([[sender valueForKey:@"status"] isEqualToString:@"1"]) {
            [_responseArr addObjectsFromArray:[sender valueForKey:@"users"]];
            
            if ([sender valueForKey:@"last_page"]) {
                [pullToRefreshManager_ setPullToRefreshViewVisible:NO];
            }
            
            NSLog(@"_responseArr..%@",_responseArr);
            [friendsTableView reloadData];
        }
        else{
            [pullToRefreshManager_ setPullToRefreshViewVisible:NO];
        }
    }
    else if(Tag == 1010){
        [self viewWillAppear:YES];
//        [self fetchFriendsListForSearchText:txtSearch.text andPage:1];
//        [friendsTableView reloadData];
    }
}

-(void)webRequestFailed:(id)sender{
    NSLog(@"webRequestFailed");
}

#pragma mark- Memory warning

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender
{
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
