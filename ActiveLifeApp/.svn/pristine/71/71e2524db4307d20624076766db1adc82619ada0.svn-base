//
//  SignUpViewController.m
//  Active Life App
//
//  Created by sdnmacmini10 on 23/06/14.
//  Copyright (c) 2014 sdnmacmini10. All rights reserved.
//

#import "SignUpViewController.h"

@interface SignUpViewController ()<UICollectionViewDelegate,UIPickerViewDataSource,UIPickerViewDelegate>
{
    IBOutlet UICollectionView *iconsCollectionView;
    IBOutlet UITextField *txtUsername, *txtPassword, *txtConfirmPassword, *txtEmail, *txtAge;
    IBOutlet UISwitch *maleSwitch, *femaleSwitch;
    UIImageView *checkCrossImage;
    UIActionSheet *actionSheet;
    UIPickerView *agePickerView;
    UIToolbar *toolbar;
}
@property (strong, nonatomic) NSMutableDictionary *responseDict;
@property (strong, nonatomic) NSArray *iconsArray;
@property (strong, nonatomic) NSMutableArray *selectedIconsArray;
@property (nonatomic, nonatomic) NSMutableArray *ageArr;
-(IBAction)btnSignUpPressed:(id)sender;
-(IBAction)switchControlPressed:(id)sender;
-(BOOL)CheckValidationForTextfield:(UITextField *)textfield;
-(void)selectAge;
@end

@implementation SignUpViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    UILabel *lblTitle = [[UILabel alloc] initWithFrame:CGRectMake(65, 0, 190, 45)];
    lblTitle.textAlignment = NSTextAlignmentCenter;
    lblTitle.text = @"SignUp";
    lblTitle.textColor = [UIColor whiteColor];
    self.navigationItem.titleView = lblTitle;
    _responseDict = [[NSMutableDictionary alloc] init];
    _selectedIconsArray = [[NSMutableArray alloc] init];
    _iconsArray = [[NSArray alloc] initWithObjects:@"archery",@"basketball",@"camel_racingl",@"canoeing",@"car_rallying",@"cricket",@"cycling",@"diving",@"football",@"golf",@"horseriding",@"kayaking",@"polo",@"running",@"sailing",@"rock_climbing",@"soccer",@"swimming",@"tennis",@"volleyball",@"water_skiling",nil];

    _ageArr = [[NSMutableArray alloc] init];
    for (int j=18; j<=100; j++) {
        [_ageArr addObject:[NSString stringWithFormat:@"%i",j]];
    }
    
    for (int i=0; i<4; i++) {
        checkCrossImage = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"checkmark_icon.png"] highlightedImage:[UIImage imageNamed:@"crossmark_icon.png"]];
        checkCrossImage.frame = CGRectMake(286, 73 + i*33, 26, 26);
        checkCrossImage.hidden = YES;
        checkCrossImage.tag = 300+i+1;
        [self.view addSubview:checkCrossImage];
    }
    
    [self switchControlPressed:nil];
    // Do any additional setup after loading the view.
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

-(IBAction)btnSignUpPressed:(id)sender{
    [_responseDict setObject:txtUsername forKey:@"username"];
    [_responseDict setObject:txtPassword forKey:@"password"];
    [_responseDict setObject:txtConfirmPassword forKey:@"confirm_password"];
    [_responseDict setObject:txtEmail forKey:@"email"];
    [_responseDict setObject:txtAge forKey:@"age"];
    [_responseDict setObject:_selectedIconsArray forKey:@"favourite_events"];
    NSLog(@"_responseDict..%@",_responseDict);
    [self.navigationController popViewControllerAnimated:YES];
}

- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event {
    
    UITouch *touch = [[event allTouches] anyObject];
    if (![[touch view] isKindOfClass:[UITextField class]]) {
        [self.view endEditing:YES];
    }
    [super touchesBegan:touches withEvent:event];
}

-(NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView
{
    return 3;
}

- (NSInteger)collectionView:(UICollectionView *)view numberOfItemsInSection:(NSInteger)section
{
    return 7;
}

- (UICollectionViewCell *)collectionView:(UICollectionView *)cv cellForItemAtIndexPath:(NSIndexPath *)indexPath;
{
    static NSString *identifier = @"Cell";
    UICollectionViewCell *cell = (UICollectionViewCell *)[cv dequeueReusableCellWithReuseIdentifier:identifier forIndexPath:indexPath];
    cell.frame = CGRectMake(cell.frame.origin.x-9, cell.frame.origin.y+10, 47, 35);
    UIButton *buttonIcons = [[UIButton alloc] initWithFrame:CGRectMake(0, 0, 47, 35)];
//  buttonIcons.tag = indexPath.section*100 + (indexPath.row+1);
    buttonIcons.tag = 7*(indexPath.section) + (indexPath.row+1);
    [buttonIcons setContentMode:UIViewContentModeScaleAspectFit];
    [buttonIcons setImage:[UIImage imageNamed:[_iconsArray objectAtIndex:(indexPath.section)*7+indexPath.row]] forState:UIControlStateNormal];
    [buttonIcons setImage:[UIImage imageNamed:[NSString stringWithFormat:@"%@_h",[_iconsArray objectAtIndex:(indexPath.section)*7+indexPath.row]]] forState:UIControlStateSelected];
    [buttonIcons addTarget:self action:@selector(btnIconPressed:) forControlEvents:UIControlEventTouchDown];
    [cell.contentView addSubview:buttonIcons];
    return cell;
}

-(IBAction)btnIconPressed:(UIButton *)sender{
    NSLog(@"[sender tag]..%i",[sender tag]);
    UIButton *buttonIcons = (UIButton *)[iconsCollectionView viewWithTag:[sender tag]];
    buttonIcons.selected ?[buttonIcons setSelected:NO]:[buttonIcons setSelected:YES];
    [_selectedIconsArray addObject:[_iconsArray objectAtIndex:[sender tag]-1]];
}

#pragma mark - Textfield Delegate

- (BOOL)textFieldShouldReturn:(UITextField *)textField{
    [textField resignFirstResponder];
    return YES;
}

- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string{
    NSLog(@"string..%@%@",textField.text,string);
    if ([textField isEqual:txtUsername]) {
        NSCharacterSet *blockedCharacters = [[NSCharacterSet alphanumericCharacterSet] invertedSet];
        return ([string rangeOfCharacterFromSet:blockedCharacters].location == NSNotFound);
    }
    return YES;
}

//- (BOOL)textFieldShouldBeginEditing:(UITextField *)textField{
//    if ([textField isEqual:txtAge]) {
//        [self selectAge];
//    }
//    return YES;
//}

- (BOOL)textFieldShouldEndEditing:(UITextField *)textField{
    UIImageView *imageView1 = (UIImageView *)[self.view viewWithTag:300+(textField.tag-200)];
    BOOL editing=1;
    if ([textField.text isEqualToString:@""]) {
        [imageView1 setHidden:YES];
    }
    else{
        [imageView1 setHidden:NO];
        editing = [self CheckValidationForTextfield:textField];
        editing?[imageView1 setHighlighted:NO]:[imageView1 setHighlighted:YES];
    }
    return editing;
}

-(void)textFieldDidBeginEditing:(UITextField *)textField{
    if ([textField isEqual:txtAge]) {
        [textField resignFirstResponder];
        [self selectAge];
    }
    else{
        [self donePressed:nil];
    }
}

#pragma mark - Picker View Delegate

- (NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView
{
    return 1;
}

- (NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component
{
    return [_ageArr count];
}

- (CGFloat)pickerView:(UIPickerView *)pickerView rowHeightForComponent:(NSInteger)component
{
    return 30.0;
}

- (NSString *)pickerView:(UIPickerView *)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component
{
    return [_ageArr objectAtIndex:row];
}

- (void)pickerView:(UIPickerView *)	pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component
{
    txtAge.text = [_ageArr objectAtIndex:row];
}

-(void)selectAge{
    actionSheet = [[UIActionSheet alloc] initWithTitle:nil
                                              delegate:nil
                                     cancelButtonTitle:nil
                                destructiveButtonTitle:nil
                                     otherButtonTitles:nil];
    
    [actionSheet setActionSheetStyle:UIActionSheetStyleBlackTranslucent];
    
    CGRect pickerFrame = CGRectMake(0, 50, 320, 200);
    
    agePickerView = [[UIPickerView alloc] initWithFrame:pickerFrame];
    agePickerView.showsSelectionIndicator = YES;
    agePickerView.dataSource = self;
    agePickerView.delegate = self;
    
    //    [agePickerView selectRow:txtAge.text.length?[_ageArr indexOfObject:txtAge.text]:0 inComponent:0 animated:YES];
    //    txtAge.text =  txtAge.text.length ? txtAge.text : [_ageArr objectAtIndex:0];
    UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];
    button.frame = CGRectMake(260, 320, 50, 50);
    [button setTitle:@"Done" forState:UIControlStateNormal];
    [button addTarget:self action:@selector(donePressed:) forControlEvents:UIControlEventTouchUpInside];
    [button setBackgroundColor:[UIColor redColor]];
    [actionSheet addSubview:agePickerView];
    [actionSheet showInView:self.view];
    [[[UIApplication sharedApplication] keyWindow]addSubview:button];
    [actionSheet setBounds:CGRectMake(0, 60, 320, 400)];
}

-(void)donePressed:(UIButton *)sender{
    [sender removeFromSuperview];
    [agePickerView removeFromSuperview];
    [toolbar removeFromSuperview];
    [actionSheet dismissWithClickedButtonIndex:0 animated:YES];
    
}

#pragma Checking Validation Method

-(BOOL)CheckValidationForTextfield:(UITextField *)textfield{
    
    if ([textfield isEqual:txtUsername]) {
        if ([txtUsername.text length] < 6) {
            [AlertView showAlertwithTitle:@"Error" message:@"Username must contain atleast 6 fields."];
            return NO;
        }
        return YES;
    }
    else if ([textfield isEqual:txtPassword])
    {
        NSLog(@"txtUsername..%@",txtPassword.text);

        BOOL letter=0, digit=0, specialCharacter=0;
            if([txtPassword.text length] >= 6)
            {
                for (int i = 0; i < [txtPassword.text length]; i++)
                {
                    unichar c = [txtPassword.text characterAtIndex:i];
                    if(!letter)
                    {
                        letter = [[NSCharacterSet letterCharacterSet] characterIsMember:c];
                    }
                    if(!digit)
                    {
                        digit = [[NSCharacterSet decimalDigitCharacterSet] characterIsMember:c];
                    }
                    if(!specialCharacter)
                    {
                        specialCharacter = [[NSCharacterSet symbolCharacterSet] characterIsMember:c]||[[NSCharacterSet nonBaseCharacterSet] characterIsMember:c]||[[NSCharacterSet punctuationCharacterSet] characterIsMember:c];
                    }
                }
                
                if(letter && digit && specialCharacter)
                {
                    return YES;
                }
                else
                {
                    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Error"
                                                                    message:@"Please ensure that you have at least one letter, one digit and one special character"
                                                                   delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil];
                    [alert show];
                    return NO;
                }
                
            }
            else
            {
                UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Error"
                                                                message:@"Please enter at least 10 password"
                                                               delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil];
                [alert show];
                return NO;
            }

    }
    else if ([textfield isEqual:txtConfirmPassword])
    {
        NSLog(@"txtUsername..%@",txtConfirmPassword.text);
        if (![txtPassword.text isEqualToString:txtConfirmPassword.text]) {
            [AlertView showAlertwithTitle:@"Error" message:@"Passwords not matched.Please re-enter the password"];
            return NO;
        }
    }
    else if ([textfield isEqual:txtEmail])
    {
        NSLog(@"txtUsername..%@",txtEmail.text);
        NSString *emailRegex = @"[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}";
        NSPredicate *emailTest = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", emailRegex];
        if ([emailTest evaluateWithObject:textfield.text]==YES) {
            return YES;
        }
        else{
            [AlertView showAlertwithTitle:@"Error" message:@"Passwords enter the correct email."];
            return NO;
        }
    }    else if ([textfield isEqual:txtAge])
    {
        NSLog(@"txtUsername..%@",txtAge.text);
    }
    return YES;
}

-(IBAction)switchControlPressed:(id)sender{
    if ([sender tag]==101) {
        if (maleSwitch.isOn == 1) {
            [maleSwitch setOn:YES animated:YES];
            [femaleSwitch setOn:NO animated:YES];
        }
        else {
            [maleSwitch setOn:NO animated:YES];
            [femaleSwitch setOn:YES animated:YES];
        }
    }
    else{
        if (femaleSwitch.isOn == 1) {
            [maleSwitch setOn:NO animated:YES];
            [femaleSwitch setOn:YES animated:YES];
        }
        else{
            [maleSwitch setOn:YES animated:YES];
            [femaleSwitch setOn:NO animated:YES];
        }
    }
    maleSwitch.isOn?[_responseDict setObject:@"Male" forKey:@"Gender"]:[_responseDict setObject:@"Female" forKey:@"Gender"];
    NSLog(@"_responseDict..%@",_responseDict);
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender
{
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
