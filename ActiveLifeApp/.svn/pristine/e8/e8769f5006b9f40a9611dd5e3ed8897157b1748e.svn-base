//
//  SearchViewController.m
//  Active Life App
//
//  Created by sdnmacmini10 on 23/06/14.
//  Copyright (c) 2014 sdnmacmini10. All rights reserved.
//

#import "SearchViewController.h"

@interface SearchViewController ()<SWRevealViewControllerDelegate>
{
    IBOutlet UITableView *eventsTableView;
    IBOutlet UISegmentedControl *segmentControl;
}
-(IBAction)btnMenuPressed:(id)sender;
@property (nonatomic, strong) NSMutableArray *responseArr;
@property (nonatomic, strong) NSMutableArray *searchArr;
@property(nonatomic,strong)IBOutlet UISearchBar *searchBar;
@property (strong, nonatomic) NSDictionary *responseDict;
-(IBAction)btnSegmentControlPressed:(id)sender;
-(IBAction)btnLogOutPressed:(id)sender;
@end

@implementation SearchViewController
bool searching=0;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    self.navigationController.navigationBarHidden = YES;
//    _responseArr = [[NSMutableArray alloc] init];
    _searchArr = [[NSMutableArray alloc] init];
//  _responseArr = (NSMutableArray *)[[Helper ReadFromJSONStore:@"Search.json"]valueForKey:@"Events"];
    
    _responseDict = [[NSDictionary alloc] init];
    _responseDict = (NSDictionary *)[Helper ReadFromJSONStore:@"Search.json"];
    _responseArr = [_responseDict valueForKey:@"Events"];
    [self btnSegmentControlPressed:nil];
    NSLog(@"_responseArr..%@",_responseArr);
    // Do any additional setup after loading the view.
}

-(void)viewWillDisappear:(BOOL)animated{
}

-(IBAction)btnMenuPressed:(id)sender{
    [_searchBar resignFirstResponder];
    SWRevealViewController *revealController = [self revealViewController];
    [revealController revealToggle:nil];
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    return 64.0;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return searching ? [_searchArr count]:[_responseArr count];
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    static NSString *CellIdentifier = @"SearchCell";
    UITableViewCell *cell;
    
    if (cell==nil) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier];
    }

    cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
    
    UILabel *senderLabel = [[UILabel alloc] initWithFrame:CGRectMake(24, 11, 150, 20)];
    senderLabel.font = [UIFont fontWithName:@"Helvetica Light" size:16.0];
    senderLabel.text = [[searching?_searchArr:_responseArr objectAtIndex:indexPath.row] valueForKey:@"event_name"];
    
    NSTextAttachment *attachment = [[NSTextAttachment alloc] init];
    attachment.image = [UIImage imageNamed:@"location_icon.png"];
    NSAttributedString *attachmentString = [NSAttributedString attributedStringWithAttachment:attachment];
    NSMutableAttributedString *myString= [[NSMutableAttributedString alloc] initWithString:[NSString stringWithFormat:@" %@",[[searching?_searchArr:_responseArr objectAtIndex:indexPath.row] valueForKey:@"Location"]]];
    [myString insertAttributedString:attachmentString atIndex:0];
    
    UILabel *locationLabel = [[UILabel alloc] initWithFrame:CGRectMake(24, 32, 80, 20)];
    locationLabel.font = [UIFont fontWithName:@"Helvetica Light" size:14.0];
    
    locationLabel.attributedText = myString;
    locationLabel.textColor = [UIColor darkGrayColor];
    
    attachment = [[NSTextAttachment alloc] init];
    attachment.image = [UIImage imageNamed:@"time_icon.png"];
    attachmentString = [NSAttributedString attributedStringWithAttachment:attachment];
    myString= [[NSMutableAttributedString alloc] initWithString:[NSString stringWithFormat:@" %@",[[searching?_searchArr:_responseArr objectAtIndex:indexPath.row] valueForKey:@"Time"]]];
    [myString insertAttributedString:attachmentString atIndex:0];
    
    UILabel *timeLabel = [[UILabel alloc] initWithFrame:CGRectMake(110, 32, 100, 20)];
    timeLabel.font = [UIFont fontWithName:@"Helvetica Light" size:14.0];
    timeLabel.attributedText = myString;
    timeLabel.textColor = [UIColor darkGrayColor];
    
    UIImageView *eventImgView = [[UIImageView alloc] initWithFrame:CGRectMake(250, 19, 25, 25)];
    eventImgView.image = [UIImage imageNamed:@"fishing_icon"];
    
    UILabel *labelSeparator = [[UILabel alloc]initWithFrame:CGRectMake(22.5, 63, 275,1)];
    labelSeparator.backgroundColor = [UIColor colorWithWhite:0.9 alpha:1.0];
    
    [cell.contentView addSubview:senderLabel];
    [cell.contentView addSubview:locationLabel];
    [cell.contentView addSubview:timeLabel];
    [cell.contentView addSubview:eventImgView];
    [cell.contentView addSubview:labelSeparator];
    
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    EventDetailsViewController *eventDetailsViewController = [[AppDelegate storyBoard] instantiateViewControllerWithIdentifier:@"EventDetailsViewController"];
    [self.navigationController pushViewController:eventDetailsViewController animated:YES];
}

- (void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText
{
    NSLog(@"searchText..%@",searchText);
    searching = searchText.length ?1:0;
    NSPredicate *predicate;
    predicate = [NSPredicate predicateWithFormat:@"SELF.event_name beginswith[cd] %@",searchText];
    NSArray *tempArray = [_responseArr filteredArrayUsingPredicate:predicate];
    _searchArr = [NSMutableArray arrayWithArray:tempArray];
    [eventsTableView reloadData];
}

- (void)searchBarSearchButtonClicked:(UISearchBar *)searchBar{
    searching = 0;
    [searchBar resignFirstResponder];
}

- (void)searchBarCancelButtonClicked:(UISearchBar *) searchBar{
    searching = 0;
    [searchBar resignFirstResponder];
}

-(IBAction)btnLogOutPressed:(id)sender{
    UINavigationController *navController =(UINavigationController *) [UIApplication sharedApplication].keyWindow.rootViewController;
    [navController popViewControllerAnimated:YES];
}

-(IBAction)btnSegmentControlPressed:(id)sender{
    NSLog(@"Segment..%i",[segmentControl selectedSegmentIndex]);
    if ([segmentControl selectedSegmentIndex]==0) {
        [(UIButton *)[self.view viewWithTag:101]setSelected:YES];
        [(UIButton *)[self.view viewWithTag:102]setSelected:NO];
    }
    else{
        [(UIButton *)[self.view viewWithTag:101]setSelected:NO];
        [(UIButton *)[self.view viewWithTag:102]setSelected:YES];
    }
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender
{
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
